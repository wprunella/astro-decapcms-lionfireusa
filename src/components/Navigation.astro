---
import SearchBar from './SearchBar.astro';

const links = [
  { text: 'HOME', href: '/' },
  
  { text: 'BLOG', href: '/blog' },
  { text: 'CATEGORIES', href: '/categories' },
	{ text: 'ABOUT', href: '/about' },
];
---

<nav class="bg-[#003366] shadow-sm">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <div class="flex-shrink-0 flex items-center">
        <a href="/" class="text-xl font-bold text-white">
          LIONFIRE USA
        </a>
      </div>
      
      <!-- Mobile menu button -->
      <div class="flex items-center sm:hidden">
        <button
          type="button"
          id="mobile-menu-button"
          class="inline-flex items-center justify-center p-2 rounded-md text-white hover:bg-[#002244]"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Icon when menu is closed -->
          <svg
            id="menu-closed-icon"
            class="block h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
          <!-- Icon when menu is open -->
          <svg
            id="menu-open-icon"
            class="hidden h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
        </button>
      </div>

      <!-- Desktop menu -->
      <div class="hidden sm:flex sm:items-center sm:space-x-8">
        <div class="w-64">
          
        </div>
        <div class="flex items-center space-x-8">
          {links.map(link => (
            <a
              href={link.href}
              class="inline-flex items-center px-1 pt-1 text-sm font-medium text-white hover:text-gray-200"
            >
              {link.text}
            </a>			
          ))}
        </div>
		<SearchBar />
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="hidden sm:hidden bg-[#003366]">
    <div class="px-4 pt-2 pb-3 space-y-3">
      <div class="mb-4">
        <SearchBar />
      </div>
      {links.map(link => (
        <a
          href={link.href}
          class="block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-[#002244]"
        >
          {link.text}
        </a>
      ))}
			
    </div>
		
  </div>
</nav>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuClosedIcon = document.getElementById('menu-closed-icon');
  const menuOpenIcon = document.getElementById('menu-open-icon');

  let isMenuOpen = false;

  function toggleMenu() {
    isMenuOpen = !isMenuOpen;
    
    // Toggle menu visibility
    mobileMenu.classList.toggle('hidden');
    
    // Toggle icons
    menuClosedIcon.classList.toggle('hidden');
    menuOpenIcon.classList.toggle('hidden');
    
    // Update aria-expanded
    mobileMenuButton.setAttribute('aria-expanded', isMenuOpen.toString());
  }

  mobileMenuButton.addEventListener('click', toggleMenu);

  // Close menu when clicking outside
  document.addEventListener('click', (e) => {
    if (isMenuOpen && 
        !mobileMenuButton.contains(e.target) && 
        !mobileMenu.contains(e.target)) {
      toggleMenu();
    }
  });

  // Close menu when screen size changes to desktop
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 650 && isMenuOpen) { // 650px is the 'sm' breakpoint
      toggleMenu();
    }
  });
</script>
