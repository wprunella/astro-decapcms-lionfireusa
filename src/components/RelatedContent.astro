---
import { getCollection } from 'astro:content';

interface Props {
    currentPost: {
        category: string;
        slug: string;
    };
}

const { currentPost } = Astro.props;
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
    .filter(post => 
        post.data.categories.includes(currentPost.category) && 
        post.slug !== currentPost.slug
    )
    .slice(0, 3);
---

{relatedPosts.length > 0 && (
    <section class="related-content">
        <h2>More {currentPost.category} Content</h2>
        <div class="related-posts">
            {relatedPosts.map((post, index) => (
                <div class={`related-post ${index === relatedPosts.length - 1 ? 'last-post' : ''}`}>
                    <a href={`/blog/${post.slug}`} class="post-link">
                        {post.data.image && (
                            <img 
                                src={post.data.image} 
                                alt={post.data.title} 
                                class="post-image"
                                width="300"
                                height="200"
                                loading="lazy"
                            />
                        )}
                        <div class="post-content">
                            <h3 class="post-title">{post.data.title}</h3>
                            <p class="post-description">{post.data.description}</p>
                        </div>
                    </a>
                </div>
            ))}
        </div>
    </section>
)}

<style>
    .related-content {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid #e5e7eb;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
    }
    
    .related-content h2 {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        color: #111827;
    }
    
    .related-posts {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }
    
    .related-post {
        display: flex;
        transition: transform 0.2s ease;
        padding-bottom: 1.5rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .last-post {
        padding-bottom: 0;
        border-bottom: none;
    }
    
    .related-post:hover {
        transform: translateY(-2px);
    }
    
    .post-link {
        text-decoration: none;
        color: inherit;
        display: flex;
        gap: 1.5rem;
        width: 100%;
    }
    
    .post-image {
        width: 300px;
        height: 200px;
        object-fit: cover;
        border-radius: 8px;
        flex-shrink: 0;
    }
    
    .post-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    
    .post-title {
        margin: 0 0 0.5rem 0;
        font-size: 1.25rem;
        color: #3b82f6;
        line-height: 1.3;
    }
    
    .post-description {
        margin: 0;
        color: #4b5563;
        font-size: 1rem;
        line-height: 1.5;
    }

    @media (max-width: 768px) {
        .post-link {
            flex-direction: column;
            gap: 1rem;
        }
        
        .post-image {
            width: 100%;
            height: 180px;
        }
    }

    @media (max-width: 480px) {
        .post-image {
            height: 160px;
        }
    }
</style>
