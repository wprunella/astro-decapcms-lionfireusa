---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Card from '../../components/Card.astro';
import RelatedContent from '../../components/RelatedContent.astro';
import { formatDate } from '../../utils/date';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
const readingTime = Math.ceil(entry.body.split(' ').length / 200);
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <article class="prose mx-auto">
    <h1>{entry.data.title}</h1>
    <div class="flex items-center gap-2 text-gray-500 mb-2">
      <span>{formatDate(entry.data.date)}</span>
      <span>â€¢</span>
      <span>{readingTime} min read</span>
    </div>
    
    <div class="flex flex-wrap gap-2 mb-6 ">
      {entry.data.categories.map(category => (
        <a 
          href={`/categories/${category.toLowerCase()}`}
        >
          <div class="px-4 py-2 text-white no-underline bg-blue-500 hover:bg-blue-600 transition-colors rounded">{category}</div>
        </a>
      ))}
    </div>
     
    {entry.data.image && (
     <img 
        src={entry.data.image} 
        alt={entry.data.title} 
        class="w-full h-auto rounded-lg shadow-lg mb-8"
      />
    )}
    
    <Content />
    
    <RelatedContent currentPost={{
      category: entry.data.categories[0],
      slug: entry.slug
    }} />
  </article>
</BaseLayout>
